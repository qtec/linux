/*
 * This file is subject to the terms and conditions of the GNU General Public
 * License.  See the file "COPYING" in the main directory of this archive
 * for more details.
 *
 * Copyright (C) 2013 Qtechnology/AS
 * ricardo.ribalda@gmail.com
 *
 */
#ifndef QTEC_VIDEO_H
#define QTEC_VIDEO_H

#include <linux/types.h>
#include <linux/v4l2-controls.h>

struct qtec_distortion{
	__u16 col_res;
	__s16 col;
	__u16 line_res;
	__s16 line;
};

#define QTEC_VIDEO_CID_BASE (V4L2_CID_USER_BASE + 0x100)
enum {
	QTEC_VIDEO_CID_DROP_FRAMES=QTEC_VIDEO_CID_BASE,
	QTEC_VIDEO_CID_ACTIVE_FRAMES,
	QTEC_VIDEO_CID_BUFFER_SIZE,
	QTEC_VIDEO_CID_SENSOR_TYPE,
	QTEC_VIDEO_CID_SENSOR_SERIAL,
	QTEC_VIDEO_CID_BITSTREAM_VERSION,
	QTEC_VIDEO_CID_RESET_PIPELINE,
	QTEC_VIDEO_CID_DEAD_PIXELS,
	QTEC_VIDEO_CID_HEAD_I2C_ADDR,
	QTEC_VIDEO_CID_HEAD_I2C_BUS,
};

#define QTEC_WHITE_CID_BASE (V4L2_CID_USER_BASE + 0x200)
enum {
	QTEC_WHITE_CID_GREEN_BALANCE=QTEC_WHITE_CID_BASE,
	QTEC_WHITE_CID_IR1_BALANCE,
	QTEC_WHITE_CID_IR2_BALANCE,
	QTEC_WHITE_CID_COMPACT_BALANCE,
	QTEC_WHITE_CID_RED_OFFSET,
	QTEC_WHITE_CID_GREEN_OFFSET,
	QTEC_WHITE_CID_BLUE_OFFSET,
	QTEC_WHITE_CID_IR1_OFFSET,
	QTEC_WHITE_CID_IR2_OFFSET,
	QTEC_WHITE_CID_COMPACT_OFFSET,
};

#define QTEC_CMOSIS_CID_BASE (V4L2_CID_USER_BASE + 0x300)
enum {
	QTEC_CMOSIS_CID_MODE_TRIG=QTEC_CMOSIS_CID_BASE,
	QTEC_CMOSIS_CID_PHASE,
	QTEC_CMOSIS_CID_FLASH_POL,
	QTEC_CMOSIS_CID_TRIG_POL,
	QTEC_CMOSIS_CID_ADC_GAIN,
	QTEC_CMOSIS_CID_OFFSET,
	QTEC_CMOSIS_CID_MANUAL_TRIGGER,
	QTEC_CMOSIS_CID_EXT_TRIG_DELAY,
	QTEC_CMOSIS_CID_EXT_TRIG_OVERFLOW,
	QTEC_CMOSIS_CID_TEMPERATURE,
	QTEC_CMOSIS_CID_VRAMP,
	QTEC_CMOSIS_CID_H_BINNING,
	QTEC_CMOSIS_CID_V_BINNING,
	QTEC_CMOSIS_CID_OUTPUT_SCALER,
	QTEC_CMOSIS_CID_BAYER_SKIPPING,
	QTEC_CMOSIS_CID_FPN,
	QTEC_CMOSIS_CID_N_CHANNELS,
	QTEC_CMOSIS_CID_BITMODE,
	QTEC_CMOSIS_CID_RESPONSE_CURVE,
	QTEC_CMOSIS_CID_TRACE_TRIGGER,
	QTEC_CMOSIS_CID_TRACE_FRAME,
	QTEC_CMOSIS_CID_TRACE_READOUT,
	QTEC_CMOSIS_CID_FLASH_DISABLE,
	QTEC_CMOSIS_CID_EXPOSURE_STEP,
	QTEC_CMOSIS_CID_DUAL_EXPOSURE,
};

#define QTEC_XFORM_CID_BASE (V4L2_CID_USER_BASE + 0x400)
enum {
	QTEC_XFORM_CID_ENABLE_DIST_MAP=QTEC_XFORM_CID_BASE,
	QTEC_XFORM_CID_ENABLE_GAIN_MAP,
	QTEC_XFORM_CID_EXTRA_GAIN,
	QTEC_XFORM_CID_DIST_BUFFER_SIZE,
	QTEC_XFORM_CID_FIFO_SIZE,
	QTEC_XFORM_CID_MIN_FIFO_LEVEL,
	QTEC_XFORM_CID_HFLIP,
	QTEC_XFORM_CID_GAIN,
};

#define QTEC_CCD_CID_BASE (V4L2_CID_USER_BASE + 0x500)
enum {
	QTEC_CCD_CID_RED_EXPOSURE=QTEC_CCD_CID_BASE,
	QTEC_CCD_CID_GREEN_EXPOSURE,
	QTEC_CCD_CID_BLUE_EXPOSURE,
	QTEC_CCD_CID_IR1_EXPOSURE,
	QTEC_CCD_CID_IR2_EXPOSURE,
	QTEC_CCD_CID_CDS,
	QTEC_CCD_CID_RED_CDS,
	QTEC_CCD_CID_GREEN_CDS,
	QTEC_CCD_CID_BLUE_CDS,
	QTEC_CCD_CID_IR1_CDS,
	QTEC_CCD_CID_IR2_CDS,
	QTEC_CCD_CID_RED_VGAGAIN,
	QTEC_CCD_CID_GREEN_VGAGAIN,
	QTEC_CCD_CID_BLUE_VGAGAIN,
	QTEC_CCD_CID_IR1_VGAGAIN,
	QTEC_CCD_CID_IR2_VGAGAIN,
	QTEC_CCD_CID_EXT_TRIG_DELAY,
	QTEC_CCD_CID_MODE_TRIG,
	QTEC_CCD_CID_FLASH_POL,
	QTEC_CCD_CID_TRIG_POL,
	QTEC_CCD_CID_MANUAL_TRIGGER,
};

#define QTEC_TESTGEN_CID_BASE (V4L2_CID_USER_BASE + 0x600)
enum {
	QTEC_TESTGEN_MISSED_FRAMES=QTEC_TESTGEN_CID_BASE,
};

#define QTEC_ROIC_CID_BASE (V4L2_CID_USER_BASE + 0x700)
enum {
	QTEC_ROIC_CID_MODE_TRIG=QTEC_ROIC_CID_BASE,
	QTEC_ROIC_CID_FLASH_POL,
	QTEC_ROIC_CID_TRIG_POL,
	QTEC_ROIC_CID_MANUAL_TRIGGER,
	QTEC_ROIC_CID_EXT_TRIG_DELAY,
	QTEC_ROIC_CID_EXT_TRIG_OVERFLOW,
	QTEC_ROIC_CID_VOLT_GOK,
	QTEC_ROIC_CID_VOLT_VSK,
	QTEC_ROIC_CID_VOLT_GFID,
	QTEC_ROIC_CID_VOLT_VDETCOM,
	QTEC_ROIC_CID_VOLT_AD_OFFSET,
	QTEC_ROIC_CID_VOLT_AD_GAIN,
	QTEC_ROIC_CID_TEMPERATURE,
	QTEC_ROIC_CID_ITR,
	QTEC_ROIC_CID_IMRO,
	QTEC_ROIC_CID_NDRO,
	QTEC_ROIC_CID_RE,
	QTEC_ROIC_CID_RST,
	QTEC_ROIC_CID_OE_EN,
	QTEC_ROIC_CID_PW,
	QTEC_ROIC_CID_I,
	QTEC_ROIC_CID_AP,
	QTEC_ROIC_CID_BW,
	QTEC_ROIC_CID_TS,
	QTEC_ROIC_CID_AUTO_OFF,
	QTEC_ROIC_CID_PIXEL_CLK,
	QTEC_ROIC_CID_VTEMP_PIN,
	QTEC_ROIC_CID_VTEMP_1,
	QTEC_ROIC_CID_VTEMP_2,
};

#define QTEC_M43_CID_BASE (V4L2_CID_USER_BASE + 0x800)
enum {
	QTEC_M43_CID_LENS_ACTIVE = QTEC_M43_CID_BASE,
	QTEC_M43_CID_LENS_NAME,
	QTEC_M43_CID_LENS_VERSION,
	QTEC_M43_CID_APERTURE,
	QTEC_M43_CID_FOCAL_LENGTH,
	QTEC_M43_CID_FOCAL_LENGTH_NON_BLOCKING,
	QTEC_M43_CID_FOCUS,
};

#define QTEC_PAN_CID_BASE (V4L2_CID_USER_BASE + 0x900)
enum {
	QTEC_PAN_CID_AXIS0_POSITION = QTEC_PAN_CID_BASE,
	QTEC_PAN_CID_AXIS1_POSITION,
	QTEC_PAN_CID_AXIS0_SPEED,
	QTEC_PAN_CID_AXIS1_SPEED,
	QTEC_PAN_CID_AXIS0_CALIBRATION,
	QTEC_PAN_CID_AXIS1_CALIBRATION,
};

#define QTEC_ENCODER_CID_BASE (V4L2_CID_USER_BASE + 0xa00)
enum {
	QTEC_ENCODER_CID_ENCODER_POSITION = QTEC_ENCODER_CID_BASE,
};

#endif
